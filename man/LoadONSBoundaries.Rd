% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/LoadONSBoundaries.R
\docType{class}
\name{LoadONSBoundaries}
\alias{LoadONSBoundaries}
\title{LoadONSBoundaries}
\format{
An R6 class object.
}
\description{
LoadONSBoundaries class
}
\details{
Load CCG, LSOA, and MSOA boundaries from ONS.
}
\section{Super classes}{
\code{\link[exceedapi:SnapshotBackend]{exceedapi::SnapshotBackend}} -> \code{\link[exceedapi:API]{exceedapi::API}} -> \code{\link[exceedapi:Step]{exceedapi::Step}} -> \code{\link[exceed.pipelines:FileDownload]{exceed.pipelines::FileDownload}} -> \code{\link[exceed.pipelines:CachedDownload]{exceed.pipelines::CachedDownload}} -> \code{LoadONSBoundaries}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-save}{\code{LoadONSBoundaries$save()}}
\item \href{#method-transform}{\code{LoadONSBoundaries$transform()}}
\item \href{#method-clone}{\code{LoadONSBoundaries$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="exceedapi" data-topic="Step" data-id="add_step">}\href{../../exceedapi/html/Step.html#method-add_step}{\code{exceedapi::Step$add_step()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="exceedapi" data-topic="Step" data-id="add_step_object">}\href{../../exceedapi/html/Step.html#method-add_step_object}{\code{exceedapi::Step$add_step_object()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="exceedapi" data-topic="Step" data-id="inverse_transform">}\href{../../exceedapi/html/Step.html#method-inverse_transform}{\code{exceedapi::Step$inverse_transform()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="exceedapi" data-topic="Step" data-id="progress_bar">}\href{../../exceedapi/html/Step.html#method-progress_bar}{\code{exceedapi::Step$progress_bar()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="exceedapi" data-topic="Step" data-id="run">}\href{../../exceedapi/html/Step.html#method-run}{\code{exceedapi::Step$run()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="exceed.pipelines" data-topic="FileDownload" data-id="download">}\href{../../exceed.pipelines/html/FileDownload.html#method-download}{\code{exceed.pipelines::FileDownload$download()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="exceed.pipelines" data-topic="CachedDownload" data-id="initialize">}\href{../../exceed.pipelines/html/CachedDownload.html#method-initialize}{\code{exceed.pipelines::CachedDownload$initialize()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="exceed.pipelines" data-topic="CachedDownload" data-id="load">}\href{../../exceed.pipelines/html/CachedDownload.html#method-load}{\code{exceed.pipelines::CachedDownload$load()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-save"></a>}}
\if{latex}{\out{\hypertarget{method-save}{}}}
\subsection{Method \code{save()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LoadONSBoundaries$save(key, obj, filename)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-transform"></a>}}
\if{latex}{\out{\hypertarget{method-transform}{}}}
\subsection{Method \code{transform()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LoadONSBoundaries$transform(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{LoadONSBoundaries$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
